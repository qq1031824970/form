/*!
 * @form-create/component-naive-radio v3.1.30
 * (c) 2018-2024 xaboy
 * Github https://github.com/xaboy/form-create with radio
 * Released under the MIT License.
 */
import{defineComponent as e,toRef as t,resolveComponent as a,createVNode as l,mergeProps as o}from"vue";var u=e({name:"fcRadio",inheritAttrs:!1,props:{formCreateInject:Object,modelValue:{type:[String,Number,Boolean],default:""},type:String},emits:["update:modelValue","fc.el"],setup(e,a){const l=t(e.formCreateInject,"options",[]);return{options:()=>Array.isArray(l.value)?l.value:[],value:t(e,"modelValue"),onInput(e){a.emit("update:modelValue",e)}}},render(){var e,t;const u="button"===this.type?"NRadioButton":"NRadio",r=a(u);return l(a("NRadioGroup"),o(this.$attrs,{value:this.value,"onUpdate:value":this.onInput,ref:"el"}),{default:()=>[this.options().map(((e,t)=>l(r,o(e,{key:u+t+"-"+e.value}),{default:()=>[e.label||e.value||""]}))),null===(e=(t=this.$slots).default)||void 0===e?void 0:e.call(t)],...(i=this.$slots,s=["default"],Object.keys(i).reduce(((e,t)=>(s&&-1!==s.indexOf(t)||e.push(i[t]),e)),[]))});var i,s},mounted(){this.$emit("fc.el",this.$refs.el)}});export{u as default};
