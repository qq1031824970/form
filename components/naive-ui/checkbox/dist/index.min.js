/*!
 * @form-create/component-naive-checkbox v3.1.30
 * (c) 2018-2024 xaboy
 * Github https://github.com/xaboy/form-create with checkbox
 * Released under the MIT License.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vue")):"function"==typeof define&&define.amd?define(["exports","vue"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).FcCheckbox={},e.Vue)}(this,(function(e,t){"use strict";var o=t.defineComponent({name:"fcCheckbox",inheritAttrs:!1,props:{formCreateInject:Object,modelValue:{type:Array,default:()=>[]}},emits:["update:modelValue","fc.el"],setup(e,o){const l=t.toRef(e.formCreateInject,"options",[]);return{options:()=>Array.isArray(l.value)?l.value:[],value:t.toRef(e,"modelValue"),onInput(e){o.emit("update:modelValue",e)}}},render(){var e,o,l,r;return t.createVNode(t.resolveComponent("NCheckboxGroup"),t.mergeProps(this.$attrs,{value:this.value,"onUpdate:value":this.onInput,ref:"el"}),{default:()=>[this.options().map(((e,o)=>t.createVNode(t.resolveComponent("NCheckbox"),t.mergeProps(e,{key:o+"-"+e.value}),null))),null===(e=(o=this.$slots).default)||void 0===e?void 0:e.call(o)],...(l=this.$slots,r=["default"],Object.keys(l).reduce(((e,t)=>(r&&-1!==r.indexOf(t)||e.push(l[t]),e)),[]))})},mounted(){this.$emit("fc.el",this.$refs.el)}});e.default=o,Object.defineProperty(e,"__esModule",{value:!0})}));
