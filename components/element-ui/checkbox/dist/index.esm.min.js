/*!
 * @form-create/component-elm-checkbox v3.1.32
 * (c) 2018-2024 xaboy
 * Github https://github.com/xaboy/form-create with checkbox
 * Released under the MIT License.
 */
import{defineComponent as e,toRef as t,ref as l,watch as u,createVNode as a,resolveComponent as o,mergeProps as n}from"vue";function r(e){return Array.isArray(e)?e:[null,void 0,""].indexOf(e)>-1?[]:[e]}var i=e({name:"fcCheckbox",inheritAttrs:!1,props:{formCreateInject:Object,modelValue:{type:Array,default:()=>[]},type:String,input:Boolean,inputValue:String},emits:["update:modelValue","fc.el"],setup(e,n){const i=t(e.formCreateInject,"options",[]),s=t(e,"modelValue"),d=t(e,"inputValue",""),p=l(d.value),v=t(e,"input",!1),m=e=>{const t=[...r(s.value)],l=t.indexOf(p.value);p.value=e,l>-1&&(t.splice(l,1),t.push(e),c(t))};u(d,(e=>{v.value?m(e):p.value=e}));const c=e=>{n.emit("update:modelValue",e)};return{options:()=>Array.isArray(i.value)?i.value:[],value:s,onInput:c,updateCustomValue:m,makeInput(e){if(v.value)return a(e,{value:p.value,label:p.value},{default:()=>[a(o("ElInput"),{modelValue:p.value,"onUpdate:modelValue":m},null)]})}}},render(){var e,t;const l="button"===this.type?"ElCheckboxButton":"ElCheckbox",u=o(l);return a(o("ElCheckboxGroup"),n(this.$attrs,{modelValue:this.value,"onUpdate:modelValue":this.onInput,ref:"el"}),{default:()=>[this.options().map(((e,t)=>{const o={...e},r=o.value,i=o.label;return delete o.value,delete o.label,a(u,n(o,{label:r,value:r,key:l+t+"-"+r}),{default:()=>[i||r||""]})})),null===(e=(t=this.$slots).default)||void 0===e?void 0:e.call(t),this.makeInput(u)],...(r=this.$slots,i=["default"],Object.keys(r).reduce(((e,t)=>(i&&-1!==i.indexOf(t)||e.push(r[t]),e)),[]))});var r,i},mounted(){this.$emit("fc.el",this.$refs.el)}});export{i as default};
