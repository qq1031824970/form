/*!
 * @form-create/component-elm-radio v3.1.32
 * (c) 2018-2024 xaboy
 * Github https://github.com/xaboy/form-create with radio
 * Released under the MIT License.
 */
import{defineComponent as e,toRef as t,ref as l,watch as a,createVNode as u,resolveComponent as o,mergeProps as n}from"vue";var r=e({name:"fcRadio",inheritAttrs:!1,props:{formCreateInject:Object,modelValue:{type:[String,Number,Boolean],default:""},type:String,input:Boolean,inputValue:String},emits:["update:modelValue","fc.el"],setup(e,n){const r=t(e.formCreateInject,"options",[]),i=t(e,"modelValue"),s=t(e,"inputValue",""),d=l(s.value),p=t(e,"input",!1);a(s,(e=>{p.value?m(e):d.value=e}));const v=e=>{n.emit("update:modelValue",e)},m=e=>{const t=d.value;d.value=e,i.value===t&&v(e)};return{options:()=>Array.isArray(r.value)?r.value:[],value:i,onInput:v,updateCustomValue:m,customValue:d,makeInput(e){if(p.value)return u(e,{value:d.value,label:d.value},{default:()=>[u(o("ElInput"),{modelValue:d.value,"onUpdate:modelValue":m},null)]})}}},render(){var e,t;const l="button"===this.type?"ElRadioButton":"ElRadio",a=o(l);return u(o("ElRadioGroup"),n(this.$attrs,{modelValue:this.value,"onUpdate:modelValue":this.onInput,ref:"el"}),{default:()=>[this.options().map(((e,t)=>{const o={...e},r=o.value,i=o.label;return delete o.value,delete o.label,u(a,n(o,{label:r,value:r,key:l+t+"-"+r}),{default:()=>[i||r||""]})})),null===(e=(t=this.$slots).default)||void 0===e?void 0:e.call(t),this.makeInput(a)],...(r=this.$slots,i=["default"],Object.keys(r).reduce(((e,t)=>(i&&-1!==i.indexOf(t)||e.push(r[t]),e)),[]))});var r,i},mounted(){this.$emit("fc.el",this.$refs.el)}});export{r as default};
