/*!
 * @form-create/component-elm-radio v3.1.32
 * (c) 2018-2024 xaboy
 * Github https://github.com/xaboy/form-create with radio
 * Released under the MIT License.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vue")):"function"==typeof define&&define.amd?define(["exports","vue"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).FcRadio={},e.Vue)}(this,(function(e,t){"use strict";var l=t.defineComponent({name:"fcRadio",inheritAttrs:!1,props:{formCreateInject:Object,modelValue:{type:[String,Number,Boolean],default:""},type:String,input:Boolean,inputValue:String},emits:["update:modelValue","fc.el"],setup(e,l){const o=t.toRef(e.formCreateInject,"options",[]),u=t.toRef(e,"modelValue"),a=t.toRef(e,"inputValue",""),n=t.ref(a.value),r=t.toRef(e,"input",!1);t.watch(a,(e=>{r.value?d(e):n.value=e}));const i=e=>{l.emit("update:modelValue",e)},d=e=>{const t=n.value;n.value=e,u.value===t&&i(e)};return{options:()=>Array.isArray(o.value)?o.value:[],value:u,onInput:i,updateCustomValue:d,customValue:n,makeInput(e){if(r.value)return t.createVNode(e,{value:n.value,label:n.value},{default:()=>[t.createVNode(t.resolveComponent("ElInput"),{modelValue:n.value,"onUpdate:modelValue":d},null)]})}}},render(){var e,l;const o="button"===this.type?"ElRadioButton":"ElRadio",u=t.resolveComponent(o);return t.createVNode(t.resolveComponent("ElRadioGroup"),t.mergeProps(this.$attrs,{modelValue:this.value,"onUpdate:modelValue":this.onInput,ref:"el"}),{default:()=>[this.options().map(((e,l)=>{const a={...e},n=a.value,r=a.label;return delete a.value,delete a.label,t.createVNode(u,t.mergeProps(a,{label:n,value:n,key:o+l+"-"+n}),{default:()=>[r||n||""]})})),null===(e=(l=this.$slots).default)||void 0===e?void 0:e.call(l),this.makeInput(u)],...(a=this.$slots,n=["default"],Object.keys(a).reduce(((e,t)=>(n&&-1!==n.indexOf(t)||e.push(a[t]),e)),[]))});var a,n},mounted(){this.$emit("fc.el",this.$refs.el)}});e.default=l,Object.defineProperty(e,"__esModule",{value:!0})}));
