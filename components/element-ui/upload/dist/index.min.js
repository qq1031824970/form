/*!
 * @form-create/component-elm-upload v3.1.30
 * (c) 2018-2024 xaboy
 * Github https://github.com/xaboy/form-create with upload
 * Released under the MIT License.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vue")):"function"==typeof define&&define.amd?define(["exports","vue"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).FcUpload={},e.Vue)}(this,(function(e,t){"use strict";function i(e){return Array.isArray(e)?e:[null,void 0,""].indexOf(e)>-1?[]:[e]}!function(e,t){void 0===t&&(t={});var i=t.insertAt;if(e&&"undefined"!=typeof document){var l=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===i&&l.firstChild?l.insertBefore(o,l.firstChild):l.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}("._fc-exceed .el-upload{display:none}.el-upload-list.is-disabled .el-upload{cursor:not-allowed!important}");var l={name:"IconUpload"};const o={class:"icon",viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},a=[t.createElementVNode("path",{fill:"currentColor",d:"M160 832h704a32 32 0 110 64H160a32 32 0 110-64zm384-578.304V704h-64V247.296L237.248 490.048 192 444.8 508.8 128l316.8 316.8-45.312 45.248L544 253.696z"},null,-1)];function n(e,t){return{url:e,name:s(e),uid:t}}function s(e){return(""+e).split("/").pop()}l.render=function(e,i,l,n,s,r){return t.openBlock(),t.createElementBlock("svg",o,a)};var r=t.defineComponent({name:"fcUpload",inheritAttrs:!1,formCreateParser:{toFormValue:e=>i(e),toValue:(e,t)=>1===t.prop.props.limit?e[0]||"":e},props:{previewMask:void 0,onPreview:Function,modalTitle:String,modelValue:[Array,String]},emits:["update:modelValue","change","remove","fc.el"],data:()=>({previewVisible:!1,previewImage:"",fileList:[]}),created(){this.fileList=i(this.modelValue).map(n)},watch:{modelValue(e){this.fileList=i(e).map(n)}},methods:{handlePreview(e){this.onPreview?this.onPreview(...arguments):(this.previewImage=e.url,this.previewVisible=!0)},update(e){let t=e.map((e=>e.url)).filter((e=>void 0!==e));this.$emit("update:modelValue",t)},handleCancel(){this.previewVisible=!1},handleChange(e,t){this.$emit("change",...arguments),"success"===e.status&&this.update(t)},handleRemove(e,t){this.$emit("remove",...arguments),this.update(t)}},render(){var e,o;const a=i(this.modelValue).length;return t.createVNode(t.Fragment,null,[t.createVNode(t.resolveComponent("ElUpload"),t.mergeProps({key:a,"list-type":"picture-card"},this.$attrs,{class:{"_fc-exceed":!!this.$attrs.limit&&this.$attrs.limit<=a},onPreview:this.handlePreview,onChange:this.handleChange,onRemove:this.handleRemove,fileList:this.fileList,ref:"upload"}),{default:()=>[(null===(e=(o=this.$slots).default)||void 0===e?void 0:e.call(o))||t.createVNode(t.resolveComponent("ElIcon"),null,{default:()=>[t.createVNode(l,null,null)]})],...(n=this.$slots,s=["default"],Object.keys(n).reduce(((e,t)=>(s&&-1!==s.indexOf(t)||e.push(n[t]),e)),[]))}),t.createVNode(t.resolveComponent("ElDialog"),{appendToBody:!0,modal:this.previewMask,title:this.modalTitle,modelValue:this.previewVisible,onClose:this.handleCancel},{default:()=>[t.createVNode("img",{style:"width: 100%",src:this.previewImage},null)]})]);var n,s},mounted(){this.$emit("fc.el",this.$refs.upload)}});e.default=r,Object.defineProperty(e,"__esModule",{value:!0})}));
