/*!
 * @form-create/component-elm-select v3.1.30
 * (c) 2018-2024 xaboy
 * Github https://github.com/xaboy/form-create with select
 * Released under the MIT License.
 */
import{defineComponent as e,toRef as t,createVNode as r,resolveComponent as l,mergeProps as o}from"vue";const a={type:(e,t)=>Object.prototype.toString.call(e)==="[object "+t+"]",Undef:e=>null==e,Element:e=>"object"==typeof e&&null!==e&&1===e.nodeType&&!a.Object(e),trueArray:e=>Array.isArray(e)&&e.length>0,Function(e){const t=this.getType(e);return"Function"===t||"AsyncFunction"===t},getType(e){const t=Object.prototype.toString.call(e);return/^\[object (.*)\]$/.exec(t)[1]},empty:e=>null==e||(!(!Array.isArray(e)||!Array.isArray(e)||e.length)||"string"==typeof e&&!e)};["Date","Object","String","Boolean","Array","Number"].forEach((e=>{a[e]=function(t){return a.type(t,e)}}));var n=e({name:"fcSelect",inheritAttrs:!1,props:{formCreateInject:Object,modelValue:{type:[Array,String,Number,Boolean,Object],default:void 0},type:String},emits:["update:modelValue","fc.el"],setup(e){const r=t(e.formCreateInject,"options",[]);return{options:()=>Array.isArray(r.value)?r.value:[],value:t(e,"modelValue")}},render(){var e,t;const n=(e,t)=>r(l("ElOption"),o(e,{key:t+"-"+e.value}),null),u=this.options();return r(l("ElSelect"),o(this.$attrs,{modelValue:this.value,"onUpdate:modelValue":e=>this.$emit("update:modelValue",e),ref:"el"}),{default:()=>[u.map(((e,t)=>{return o=e||"",u="options",{}.hasOwnProperty.call(o,u)?((e,t)=>r(l("ElOptionGroup"),{label:e.label,key:t+"-"+e.label},{default:()=>[a.trueArray(e.options)&&e.options.map(((e,t)=>n(e,t)))]}))(e,t):n(e,t);var o,u})),null===(e=(t=this.$slots).default)||void 0===e?void 0:e.call(t)],...(i=this.$slots,s=["default"],Object.keys(i).reduce(((e,t)=>(s&&-1!==s.indexOf(t)||e.push(i[t]),e)),[]))});var i,s},mounted(){this.$emit("fc.el",this.$refs.el)}});export{n as default};
